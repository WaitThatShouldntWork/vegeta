2025-08-27 09:14:26,699 - INFO - Attempting to pull the model...
2025-08-27 09:14:32,474 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Type) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_51a7efc4 FOR (e:Type) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (t:Type) REQUIRE t.name IS UNIQUE'
2025-08-27 09:14:32,481 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_4e4bae9c FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (r:RelationType) REQUIRE r.name IS UNIQUE'
2025-08-27 09:14:32,490 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_2f42a09f FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (sv:SlotValue) REQUIRE (sv.slot, sv.value) IS UNIQUE'
2025-08-27 09:14:32,497 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` has no effect.} {description: `CONSTRAINT doc_url FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (d:Document) REQUIRE d.source_url IS UNIQUE'
2025-08-27 09:14:32,505 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_642c5f90 FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (s:Section) REQUIRE (s.doc_url, s.order) IS UNIQUE'
2025-08-27 09:14:32,513 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_26f2e20a FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (p:Paragraph) REQUIRE (p.doc_url, p.order) IS UNIQUE'
2025-08-27 09:14:32,522 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_d4e2e1cf FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (snt:Sentence) REQUIRE (snt.doc_url, snt.order) IS UNIQUE'
2025-08-27 09:14:32,684 - WARNING - Statement 15 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'notable': expected 'ALTER', 'ORDER BY', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'FOREACH', 'GRANT', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'SKIP', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"notable tank chase in St. Petersburg.'},"
 ^}
2025-08-27 09:14:32,691 - WARNING - Statement 16 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'chooses': expected 'ALTER', 'ORDER BY', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'FOREACH', 'GRANT', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'SKIP', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"chooses the red pill.'},"
 ^}
2025-08-27 09:14:32,695 - WARNING - Statement 17 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'CIA': expected 'ALTER', 'ORDER BY', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'FOREACH', 'GRANT', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'SKIP', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"CIA analyst investigates.'},"
 ^}
2025-08-27 09:14:32,920 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)` has no effect.} {description: `RANGE INDEX constraint_1ed05907 FOR (e:Entity) ON (e.id)` already exists.} {position: None} for query: 'CREATE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)'
2025-08-27 09:14:32,927 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX type_name_index IF NOT EXISTS FOR (e:Type) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_51a7efc4 FOR (e:Type) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX type_name_index IF NOT EXISTS FOR (t:Type) ON (t.name)'
2025-08-27 09:14:32,934 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX relation_type_name_index IF NOT EXISTS FOR (e:RelationType) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_4e4bae9c FOR (e:RelationType) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX relation_type_name_index IF NOT EXISTS FOR (r:RelationType) ON (r.name)'
2025-08-27 09:14:32,943 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX slot_value_composite_index IF NOT EXISTS FOR (e:SlotValue) ON (e.slot, e.value)` has no effect.} {description: `RANGE INDEX constraint_2f42a09f FOR (e:SlotValue) ON (e.slot, e.value)` already exists.} {position: None} for query: 'CREATE INDEX slot_value_composite_index IF NOT EXISTS FOR (sv:SlotValue) ON (sv.slot, sv.value)'
2025-08-27 09:14:32,951 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX document_url_index IF NOT EXISTS FOR (e:Document) ON (e.source_url)` has no effect.} {description: `RANGE INDEX doc_url FOR (e:Document) ON (e.source_url)` already exists.} {position: None} for query: 'CREATE INDEX document_url_index IF NOT EXISTS FOR (d:Document) ON (d.source_url)'
2025-08-27 09:14:33,245 - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: summary)} {position: line: 4, column: 47, offset: 166} for query: "\n                    MATCH (e:Entity:Demo)\n                    RETURN e.id as id, e.name as name, e.aliases as aliases,\n                           coalesce(e.plot, e.summary, '') as description\n                "
2025-08-27 09:14:33,246 - INFO - Found 0 entities to process
2025-08-27 09:16:55,163 - INFO - Attempting to pull the model...
2025-08-27 09:16:59,979 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Type) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_51a7efc4 FOR (e:Type) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (t:Type) REQUIRE t.name IS UNIQUE'
2025-08-27 09:16:59,983 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_4e4bae9c FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (r:RelationType) REQUIRE r.name IS UNIQUE'
2025-08-27 09:16:59,986 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_2f42a09f FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (sv:SlotValue) REQUIRE (sv.slot, sv.value) IS UNIQUE'
2025-08-27 09:16:59,990 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` has no effect.} {description: `CONSTRAINT doc_url FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (d:Document) REQUIRE d.source_url IS UNIQUE'
2025-08-27 09:16:59,994 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_642c5f90 FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (s:Section) REQUIRE (s.doc_url, s.order) IS UNIQUE'
2025-08-27 09:16:59,999 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_26f2e20a FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (p:Paragraph) REQUIRE (p.doc_url, p.order) IS UNIQUE'
2025-08-27 09:17:00,003 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_d4e2e1cf FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS\nFOR (snt:Sentence) REQUIRE (snt.doc_url, snt.order) IS UNIQUE'
2025-08-27 09:17:00,079 - WARNING - Statement 15 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'notable': expected 'ALTER', 'ORDER BY', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'FOREACH', 'GRANT', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'SKIP', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"notable tank chase in St. Petersburg.'},"
 ^}
2025-08-27 09:17:00,084 - WARNING - Statement 16 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'chooses': expected 'ALTER', 'ORDER BY', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'FOREACH', 'GRANT', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'SKIP', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"chooses the red pill.'},"
 ^}
2025-08-27 09:17:00,087 - WARNING - Statement 17 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'CIA': expected 'ALTER', 'ORDER BY', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'FOREACH', 'GRANT', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'SKIP', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"CIA analyst investigates.'},"
 ^}
2025-08-27 09:17:00,187 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)` has no effect.} {description: `RANGE INDEX constraint_1ed05907 FOR (e:Entity) ON (e.id)` already exists.} {position: None} for query: 'CREATE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)'
2025-08-27 09:17:00,191 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX type_name_index IF NOT EXISTS FOR (e:Type) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_51a7efc4 FOR (e:Type) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX type_name_index IF NOT EXISTS FOR (t:Type) ON (t.name)'
2025-08-27 09:17:00,195 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX relation_type_name_index IF NOT EXISTS FOR (e:RelationType) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_4e4bae9c FOR (e:RelationType) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX relation_type_name_index IF NOT EXISTS FOR (r:RelationType) ON (r.name)'
2025-08-27 09:17:00,197 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX slot_value_composite_index IF NOT EXISTS FOR (e:SlotValue) ON (e.slot, e.value)` has no effect.} {description: `RANGE INDEX constraint_2f42a09f FOR (e:SlotValue) ON (e.slot, e.value)` already exists.} {position: None} for query: 'CREATE INDEX slot_value_composite_index IF NOT EXISTS FOR (sv:SlotValue) ON (sv.slot, sv.value)'
2025-08-27 09:17:00,204 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX document_url_index IF NOT EXISTS FOR (e:Document) ON (e.source_url)` has no effect.} {description: `RANGE INDEX doc_url FOR (e:Document) ON (e.source_url)` already exists.} {position: None} for query: 'CREATE INDEX document_url_index IF NOT EXISTS FOR (d:Document) ON (d.source_url)'
2025-08-27 09:17:00,210 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE FULLTEXT INDEX entity_name_fulltext IF NOT EXISTS FOR (e:Entity) ON EACH [e.name, e.aliases]` has no effect.} {description: `FULLTEXT INDEX entity_name_fulltext FOR (e:Entity) ON EACH [e.name, e.aliases]` already exists.} {position: None} for query: '\n                        CREATE FULLTEXT INDEX entity_name_fulltext IF NOT EXISTS\n                        FOR (e:Entity) ON EACH [e.name, e.aliases]\n                    '
2025-08-27 09:17:00,230 - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: summary)} {position: line: 4, column: 47, offset: 166} for query: "\n                    MATCH (e:Entity:Demo)\n                    RETURN e.id as id, e.name as name, e.aliases as aliases,\n                           coalesce(e.plot, e.summary, '') as description\n                "
2025-08-27 09:17:00,231 - INFO - Found 0 entities to process
2025-08-27 09:17:00,240 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE VECTOR INDEX entity_semantic_index IF NOT EXISTS FOR (e:Entity) ON (e.sem_emb) OPTIONS {indexConfig: {`vector.dimensions`: 768, `vector.similarity_function`: "cosine"}}` has no effect.} {description: `VECTOR INDEX entity_semantic_index FOR (e:Entity) ON (e.sem_emb)` already exists.} {position: None} for query: "\n                        CREATE VECTOR INDEX entity_semantic_index IF NOT EXISTS\n                        FOR (e:Entity) ON (e.sem_emb)\n                        OPTIONS {\n                            indexConfig: {\n                                `vector.dimensions`: 768,\n                                `vector.similarity_function`: 'cosine'\n                            }\n                        }\n                    "
2025-08-27 09:17:51,218 - INFO - ✓ Neo4j connected: Connection successful
2025-08-27 09:17:53,266 - INFO - ✓ Ollama model nomic-embed-text:latest available
2025-08-27 09:17:55,367 - INFO - ✓ Embedding test successful (dim: 768)
2025-08-27 09:17:55,367 - INFO - 🗑️  Clearing existing Demo data...
2025-08-27 09:17:55,372 - INFO - ✓ Cleared 0 nodes
2025-08-27 09:17:55,372 - INFO - 📁 Executing Cypher file: study/seed.cypher
2025-08-27 09:17:55,373 - INFO - Found 26 Cypher statements to execute
2025-08-27 09:17:55,380 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Entity) REQUIRE (e.id) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_1ed05907 FOR (e:Entity) REQUIRE (e.id) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (e:Entity) REQUIRE e.id IS UNIQUE;'
2025-08-27 09:17:55,385 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Type) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_51a7efc4 FOR (e:Type) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (t:Type) REQUIRE t.name IS UNIQUE;'
2025-08-27 09:17:55,388 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_4e4bae9c FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (r:RelationType) REQUIRE r.name IS UNIQUE;'
2025-08-27 09:17:55,393 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_2f42a09f FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (sv:SlotValue) REQUIRE (sv.slot, sv.value) IS UNIQUE;'
2025-08-27 09:17:55,398 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` has no effect.} {description: `CONSTRAINT doc_url FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (d:Document) REQUIRE d.source_url IS UNIQUE;'
2025-08-27 09:17:55,403 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_642c5f90 FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (s:Section) REQUIRE (s.doc_url, s.order) IS UNIQUE;'
2025-08-27 09:17:55,409 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_26f2e20a FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (p:Paragraph) REQUIRE (p.doc_url, p.order) IS UNIQUE;'
2025-08-27 09:17:55,416 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_d4e2e1cf FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (snt:Sentence) REQUIRE (snt.doc_url, snt.order) IS UNIQUE;'
2025-08-27 09:17:56,067 - WARNING - Statement 22 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'Skyfall': expected an expression, ',' or '}' (line 1, column 197 (offset: 196))
"MATCH (tAward:Type {name:'Award'}) MERGE (aw:Entity:Award:Demo {id:'award:bafta', name:'BAFTA Award'}) MERGE (aw)-[:INSTANCE_OF]->(tAward) MERGE (doc:Document {source_url:'https: SET doc.title = 'Skyfall - Wikipedia', doc.doc_url = doc.source_url MERGE (sec:Section {doc_url: doc.source_url, order: 1}) MERGE (par:Paragraph {doc_url: doc.source_url, order: 1}) MERGE (sen:Sentence {doc_url: doc.source_url, order: 1, text:'Skyfall won the BAFTA for Outstanding British Film.'}) MERGE (doc)-[:HAS_SECTION]->(sec) MERGE (sec)-[:HAS_PARAGRAPH]->(par) MERGE (par)-[:HAS_SENTENCE]->(sen);"
                                                                                                                                                                                                     ^}
2025-08-27 09:17:56,071 - WARNING - Statement 23 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'WON_AWARD': expected an expression, ',' or '}' (line 1, column 168 (offset: 167))
"MATCH (sky:Entity:Film:Demo {id:'film:skyfall'}) MATCH (aw:Entity:Award:Demo {id:'award:bafta'}) MATCH (doc:Document {source_url:'https: MERGE (rt:RelationType {name:'WON_AWARD'}) MERGE (fact:Fact:Demo {kind:'WON_AWARD'}) MERGE (fact)-[:SUBJECT]->(sky) MERGE (fact)-[:PREDICATE]->(rt) MERGE (fact)-[:OBJECT]->(aw) MERGE (fact)-[:HAS_SOURCE {support:1.0}]->(doc);"
                                                                                                                                                                        ^}
2025-08-27 09:17:56,075 - WARNING - Statement 24 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'film': expected an expression, ',' or '}' (line 1, column 71 (offset: 70))
"MATCH (sen:Sentence {doc_url:'https: MATCH (sky:Entity:Film:Demo {id:'film:skyfall'}) MATCH (aw:Entity:Award:Demo {id:'award:bafta'}) MERGE (sen)-[:MENTIONS {confidence:0.9, via:'seed'}]->(sky) MERGE (sen)-[:MENTIONS {confidence:0.9, via:'seed'}]->(aw);"
                                                                       ^}
2025-08-27 09:17:56,214 - INFO - ✓ Cypher file executed successfully
2025-08-27 09:17:56,214 - INFO - ⚡ Creating standard property indexes...
2025-08-27 09:17:56,216 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)` has no effect.} {description: `RANGE INDEX constraint_1ed05907 FOR (e:Entity) ON (e.id)` already exists.} {position: None} for query: 'CREATE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)'
2025-08-27 09:17:56,218 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX type_name_index IF NOT EXISTS FOR (e:Type) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_51a7efc4 FOR (e:Type) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX type_name_index IF NOT EXISTS FOR (t:Type) ON (t.name)'
2025-08-27 09:17:56,220 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX relation_type_name_index IF NOT EXISTS FOR (e:RelationType) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_4e4bae9c FOR (e:RelationType) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX relation_type_name_index IF NOT EXISTS FOR (r:RelationType) ON (r.name)'
2025-08-27 09:17:56,223 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX slot_value_composite_index IF NOT EXISTS FOR (e:SlotValue) ON (e.slot, e.value)` has no effect.} {description: `RANGE INDEX constraint_2f42a09f FOR (e:SlotValue) ON (e.slot, e.value)` already exists.} {position: None} for query: 'CREATE INDEX slot_value_composite_index IF NOT EXISTS FOR (sv:SlotValue) ON (sv.slot, sv.value)'
2025-08-27 09:17:56,225 - INFO - ✓ Created/verified 5 standard indexes
2025-08-27 09:17:56,226 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX document_url_index IF NOT EXISTS FOR (e:Document) ON (e.source_url)` has no effect.} {description: `RANGE INDEX doc_url FOR (e:Document) ON (e.source_url)` already exists.} {position: None} for query: 'CREATE INDEX document_url_index IF NOT EXISTS FOR (d:Document) ON (d.source_url)'
2025-08-27 09:17:56,226 - INFO - 🔍 Creating fulltext indexes...
2025-08-27 09:17:56,229 - INFO - ✓ Created entity name fulltext index
2025-08-27 09:17:56,229 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE FULLTEXT INDEX entity_name_fulltext IF NOT EXISTS FOR (e:Entity) ON EACH [e.name, e.aliases]` has no effect.} {description: `FULLTEXT INDEX entity_name_fulltext FOR (e:Entity) ON EACH [e.name, e.aliases]` already exists.} {position: None} for query: '\n                        CREATE FULLTEXT INDEX entity_name_fulltext IF NOT EXISTS\n                        FOR (e:Entity) ON EACH [e.name, e.aliases]\n                    '
2025-08-27 09:17:56,229 - INFO - 🧠 Generating embeddings for entities...
2025-08-27 09:17:56,236 - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: summary)} {position: line: 4, column: 47, offset: 166} for query: "\n                    MATCH (e:Entity:Demo)\n                    RETURN e.id as id, e.name as name, e.aliases as aliases,\n                           coalesce(e.plot, e.summary, '') as description\n                "
2025-08-27 09:17:56,237 - INFO - Found 28 entities to process
2025-08-27 09:18:17,275 - INFO -   Processed 10/28 entities
2025-08-27 09:18:34,072 - ERROR - ✗ Failed to generate embeddings: sequence item 0: expected str instance, NoneType found
2025-08-27 09:18:34,073 - WARNING - Embedding generation failed, continuing...
2025-08-27 09:18:34,073 - INFO - 📊 Creating vector indexes...
2025-08-27 09:18:34,075 - INFO - ✓ Created semantic embedding vector index
2025-08-27 09:18:34,076 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE VECTOR INDEX entity_semantic_index IF NOT EXISTS FOR (e:Entity) ON (e.sem_emb) OPTIONS {indexConfig: {`vector.dimensions`: 768, `vector.similarity_function`: "cosine"}}` has no effect.} {description: `VECTOR INDEX entity_semantic_index FOR (e:Entity) ON (e.sem_emb)` already exists.} {position: None} for query: "\n                        CREATE VECTOR INDEX entity_semantic_index IF NOT EXISTS\n                        FOR (e:Entity) ON (e.sem_emb)\n                        OPTIONS {\n                            indexConfig: {\n                                `vector.dimensions`: 768,\n                                `vector.similarity_function`: 'cosine'\n                            }\n                        }\n                    "
2025-08-27 09:18:34,076 - INFO - 🔍 Validating data integrity...
2025-08-27 09:18:34,101 - INFO - ✓ Data validation completed
2025-08-27 09:18:34,104 - INFO - 🎉 Database loading completed successfully!
2025-08-27 09:18:34,104 - INFO - ✓ Database connection closed
2025-08-27 09:19:00,307 - INFO - ✓ Neo4j connected: Connection successful
2025-08-27 09:19:02,349 - INFO - ✓ Ollama model nomic-embed-text:latest available
2025-08-27 09:19:04,423 - INFO - ✓ Embedding test successful (dim: 768)
2025-08-27 09:19:04,423 - INFO - 📁 Executing Cypher file: study/seed.cypher
2025-08-27 09:19:04,424 - INFO - Found 26 Cypher statements to execute
2025-08-27 09:19:04,447 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Entity) REQUIRE (e.id) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_1ed05907 FOR (e:Entity) REQUIRE (e.id) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (e:Entity) REQUIRE e.id IS UNIQUE;'
2025-08-27 09:19:04,450 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Type) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_51a7efc4 FOR (e:Type) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (t:Type) REQUIRE t.name IS UNIQUE;'
2025-08-27 09:19:04,453 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_4e4bae9c FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (r:RelationType) REQUIRE r.name IS UNIQUE;'
2025-08-27 09:19:04,456 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_2f42a09f FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (sv:SlotValue) REQUIRE (sv.slot, sv.value) IS UNIQUE;'
2025-08-27 09:19:04,459 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` has no effect.} {description: `CONSTRAINT doc_url FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (d:Document) REQUIRE d.source_url IS UNIQUE;'
2025-08-27 09:19:04,461 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_642c5f90 FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (s:Section) REQUIRE (s.doc_url, s.order) IS UNIQUE;'
2025-08-27 09:19:04,464 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_26f2e20a FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (p:Paragraph) REQUIRE (p.doc_url, p.order) IS UNIQUE;'
2025-08-27 09:19:04,468 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_d4e2e1cf FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (snt:Sentence) REQUIRE (snt.doc_url, snt.order) IS UNIQUE;'
2025-08-27 09:19:04,784 - WARNING - Statement 22 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'Skyfall': expected an expression, ',' or '}' (line 1, column 197 (offset: 196))
"MATCH (tAward:Type {name:'Award'}) MERGE (aw:Entity:Award:Demo {id:'award:bafta', name:'BAFTA Award'}) MERGE (aw)-[:INSTANCE_OF]->(tAward) MERGE (doc:Document {source_url:'https: SET doc.title = 'Skyfall - Wikipedia', doc.doc_url = doc.source_url MERGE (sec:Section {doc_url: doc.source_url, order: 1}) MERGE (par:Paragraph {doc_url: doc.source_url, order: 1}) MERGE (sen:Sentence {doc_url: doc.source_url, order: 1, text:'Skyfall won the BAFTA for Outstanding British Film.'}) MERGE (doc)-[:HAS_SECTION]->(sec) MERGE (sec)-[:HAS_PARAGRAPH]->(par) MERGE (par)-[:HAS_SENTENCE]->(sen);"
                                                                                                                                                                                                     ^}
2025-08-27 09:19:04,788 - WARNING - Statement 23 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'WON_AWARD': expected an expression, ',' or '}' (line 1, column 168 (offset: 167))
"MATCH (sky:Entity:Film:Demo {id:'film:skyfall'}) MATCH (aw:Entity:Award:Demo {id:'award:bafta'}) MATCH (doc:Document {source_url:'https: MERGE (rt:RelationType {name:'WON_AWARD'}) MERGE (fact:Fact:Demo {kind:'WON_AWARD'}) MERGE (fact)-[:SUBJECT]->(sky) MERGE (fact)-[:PREDICATE]->(rt) MERGE (fact)-[:OBJECT]->(aw) MERGE (fact)-[:HAS_SOURCE {support:1.0}]->(doc);"
                                                                                                                                                                        ^}
2025-08-27 09:19:04,790 - WARNING - Statement 24 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'film': expected an expression, ',' or '}' (line 1, column 71 (offset: 70))
"MATCH (sen:Sentence {doc_url:'https: MATCH (sky:Entity:Film:Demo {id:'film:skyfall'}) MATCH (aw:Entity:Award:Demo {id:'award:bafta'}) MERGE (sen)-[:MENTIONS {confidence:0.9, via:'seed'}]->(sky) MERGE (sen)-[:MENTIONS {confidence:0.9, via:'seed'}]->(aw);"
                                                                       ^}
2025-08-27 09:19:04,797 - INFO - ✓ Cypher file executed successfully
2025-08-27 09:19:04,797 - INFO - 🧠 Generating embeddings for entities...
2025-08-27 09:19:04,800 - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: summary)} {position: line: 4, column: 47, offset: 166} for query: "\n                    MATCH (e:Entity:Demo)\n                    RETURN e.id as id, e.name as name, e.aliases as aliases,\n                           coalesce(e.plot, e.summary, '') as description\n                "
2025-08-27 09:19:04,801 - INFO - Found 28 entities to process
2025-08-27 09:19:25,778 - INFO -   Processed 10/28 entities
2025-08-27 09:19:46,685 - INFO -   Processed 20/28 entities
2025-08-27 09:20:03,449 - INFO - ✓ Generated embeddings for 28 entities
2025-08-27 09:20:03,473 - INFO - 🔍 Validating data integrity...
2025-08-27 09:20:03,493 - INFO - ✓ Data validation completed
2025-08-27 09:20:03,495 - INFO - 🎉 Database loading completed successfully!
2025-08-27 09:20:03,495 - INFO - ✓ Database connection closed
2025-08-27 12:39:45,835 - INFO - ✓ Neo4j connected: Connection successful
2025-08-27 12:39:47,904 - INFO - ✓ Ollama model nomic-embed-text:latest available
2025-08-27 12:39:50,857 - INFO - ✓ Embedding test successful (dim: 768)
2025-08-27 12:39:50,858 - INFO - 🗑️  Clearing existing data...
2025-08-27 12:39:50,936 - INFO - ✓ Cleared 61 nodes
2025-08-27 12:39:50,937 - INFO - 📁 Executing Cypher file: study/seed.cypher
2025-08-27 12:39:50,937 - INFO - Found 26 Cypher statements to execute
2025-08-27 12:39:50,944 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Entity) REQUIRE (e.id) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_1ed05907 FOR (e:Entity) REQUIRE (e.id) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (e:Entity) REQUIRE e.id IS UNIQUE;'
2025-08-27 12:39:50,946 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Type) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_51a7efc4 FOR (e:Type) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (t:Type) REQUIRE t.name IS UNIQUE;'
2025-08-27 12:39:50,947 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_4e4bae9c FOR (e:RelationType) REQUIRE (e.name) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (r:RelationType) REQUIRE r.name IS UNIQUE;'
2025-08-27 12:39:50,949 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_2f42a09f FOR (e:SlotValue) REQUIRE (e.slot, e.value) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (sv:SlotValue) REQUIRE (sv.slot, sv.value) IS UNIQUE;'
2025-08-27 12:39:50,951 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` has no effect.} {description: `CONSTRAINT doc_url FOR (e:Document) REQUIRE (e.source_url) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (d:Document) REQUIRE d.source_url IS UNIQUE;'
2025-08-27 12:39:50,952 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_642c5f90 FOR (e:Section) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (s:Section) REQUIRE (s.doc_url, s.order) IS UNIQUE;'
2025-08-27 12:39:50,953 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_26f2e20a FOR (e:Paragraph) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (p:Paragraph) REQUIRE (p.doc_url, p.order) IS UNIQUE;'
2025-08-27 12:39:50,954 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE CONSTRAINT IF NOT EXISTS FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` has no effect.} {description: `CONSTRAINT constraint_d4e2e1cf FOR (e:Sentence) REQUIRE (e.doc_url, e.order) IS UNIQUE` already exists.} {position: None} for query: 'CREATE CONSTRAINT IF NOT EXISTS FOR (snt:Sentence) REQUIRE (snt.doc_url, snt.order) IS UNIQUE;'
2025-08-27 12:39:51,283 - WARNING - Statement 22 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'Skyfall': expected an expression, ',' or '}' (line 1, column 192 (offset: 191))
"MATCH (tAward:Type {name:'Award'}) MERGE (aw:Entity:Award {id:'award:bafta', name:'BAFTA Award'}) MERGE (aw)-[:INSTANCE_OF]->(tAward) MERGE (doc:Document {source_url:'https: SET doc.title = 'Skyfall - Wikipedia', doc.doc_url = doc.source_url MERGE (sec:Section {doc_url: doc.source_url, order: 1}) MERGE (par:Paragraph {doc_url: doc.source_url, order: 1}) MERGE (sen:Sentence {doc_url: doc.source_url, order: 1, text:'Skyfall won the BAFTA for Outstanding British Film.'}) MERGE (doc)-[:HAS_SECTION]->(sec) MERGE (sec)-[:HAS_PARAGRAPH]->(par) MERGE (par)-[:HAS_SENTENCE]->(sen);"
                                                                                                                                                                                                ^}
2025-08-27 12:39:51,285 - WARNING - Statement 23 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'WON_AWARD': expected an expression, ',' or '}' (line 1, column 158 (offset: 157))
"MATCH (sky:Entity:Film {id:'film:skyfall'}) MATCH (aw:Entity:Award {id:'award:bafta'}) MATCH (doc:Document {source_url:'https: MERGE (rt:RelationType {name:'WON_AWARD'}) MERGE (fact:Fact {kind:'WON_AWARD'}) MERGE (fact)-[:SUBJECT]->(sky) MERGE (fact)-[:PREDICATE]->(rt) MERGE (fact)-[:OBJECT]->(aw) MERGE (fact)-[:HAS_SOURCE {support:1.0}]->(doc);"
                                                                                                                                                              ^}
2025-08-27 12:39:51,287 - WARNING - Statement 24 warning: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'film': expected an expression, ',' or '}' (line 1, column 66 (offset: 65))
"MATCH (sen:Sentence {doc_url:'https: MATCH (sky:Entity:Film {id:'film:skyfall'}) MATCH (aw:Entity:Award {id:'award:bafta'}) MERGE (sen)-[:MENTIONS {confidence:0.9, via:'seed'}]->(sky) MERGE (sen)-[:MENTIONS {confidence:0.9, via:'seed'}]->(aw);"
                                                                  ^}
2025-08-27 12:39:51,418 - INFO - ✓ Cypher file executed successfully
2025-08-27 12:39:51,419 - INFO - ⚡ Creating standard property indexes...
2025-08-27 12:39:51,422 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)` has no effect.} {description: `RANGE INDEX constraint_1ed05907 FOR (e:Entity) ON (e.id)` already exists.} {position: None} for query: 'CREATE INDEX entity_id_index IF NOT EXISTS FOR (e:Entity) ON (e.id)'
2025-08-27 12:39:51,425 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX type_name_index IF NOT EXISTS FOR (e:Type) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_51a7efc4 FOR (e:Type) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX type_name_index IF NOT EXISTS FOR (t:Type) ON (t.name)'
2025-08-27 12:39:51,427 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX relation_type_name_index IF NOT EXISTS FOR (e:RelationType) ON (e.name)` has no effect.} {description: `RANGE INDEX constraint_4e4bae9c FOR (e:RelationType) ON (e.name)` already exists.} {position: None} for query: 'CREATE INDEX relation_type_name_index IF NOT EXISTS FOR (r:RelationType) ON (r.name)'
2025-08-27 12:39:51,429 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX slot_value_composite_index IF NOT EXISTS FOR (e:SlotValue) ON (e.slot, e.value)` has no effect.} {description: `RANGE INDEX constraint_2f42a09f FOR (e:SlotValue) ON (e.slot, e.value)` already exists.} {position: None} for query: 'CREATE INDEX slot_value_composite_index IF NOT EXISTS FOR (sv:SlotValue) ON (sv.slot, sv.value)'
2025-08-27 12:39:51,431 - INFO - ✓ Created/verified 5 standard indexes
2025-08-27 12:39:51,431 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE RANGE INDEX document_url_index IF NOT EXISTS FOR (e:Document) ON (e.source_url)` has no effect.} {description: `RANGE INDEX doc_url FOR (e:Document) ON (e.source_url)` already exists.} {position: None} for query: 'CREATE INDEX document_url_index IF NOT EXISTS FOR (d:Document) ON (d.source_url)'
2025-08-27 12:39:51,431 - INFO - 🔍 Creating fulltext indexes...
2025-08-27 12:39:51,434 - INFO - ✓ Created entity name fulltext index
2025-08-27 12:39:51,435 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE FULLTEXT INDEX entity_name_fulltext IF NOT EXISTS FOR (e:Entity) ON EACH [e.name, e.aliases]` has no effect.} {description: `FULLTEXT INDEX entity_name_fulltext FOR (e:Entity) ON EACH [e.name, e.aliases]` already exists.} {position: None} for query: '\n                        CREATE FULLTEXT INDEX entity_name_fulltext IF NOT EXISTS\n                        FOR (e:Entity) ON EACH [e.name, e.aliases]\n                    '
2025-08-27 12:39:51,435 - INFO - 🧠 Generating embeddings for entities...
2025-08-27 12:39:51,453 - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: summary)} {position: line: 4, column: 47, offset: 161} for query: "\n                    MATCH (e:Entity)\n                    RETURN e.id as id, e.name as name, e.aliases as aliases,\n                           coalesce(e.plot, e.summary, '') as description\n                "
2025-08-27 12:39:51,454 - INFO - Found 28 entities to process
2025-08-27 12:40:12,582 - INFO -   Processed 10/28 entities
2025-08-27 12:40:33,698 - INFO -   Processed 20/28 entities
2025-08-27 12:40:50,642 - INFO - ✓ Generated embeddings for 28 entities
2025-08-27 12:40:50,664 - INFO - 📊 Creating vector indexes...
2025-08-27 12:40:50,670 - INFO - ✓ Created semantic embedding vector index
2025-08-27 12:40:50,671 - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Schema.IndexOrConstraintAlreadyExists} {category: SCHEMA} {title: `CREATE VECTOR INDEX entity_semantic_index IF NOT EXISTS FOR (e:Entity) ON (e.sem_emb) OPTIONS {indexConfig: {`vector.dimensions`: 768, `vector.similarity_function`: "cosine"}}` has no effect.} {description: `VECTOR INDEX entity_semantic_index FOR (e:Entity) ON (e.sem_emb)` already exists.} {position: None} for query: "\n                        CREATE VECTOR INDEX entity_semantic_index IF NOT EXISTS\n                        FOR (e:Entity) ON (e.sem_emb)\n                        OPTIONS {\n                            indexConfig: {\n                                `vector.dimensions`: 768,\n                                `vector.similarity_function`: 'cosine'\n                            }\n                        }\n                    "
2025-08-27 12:40:50,671 - INFO - 🔍 Validating data integrity...
2025-08-27 12:40:50,765 - INFO - ✓ Data validation completed
2025-08-27 12:40:50,766 - INFO - 🎉 Database loading completed successfully!
2025-08-27 12:40:50,767 - INFO - ✓ Database connection closed
